name: build

on:
  push:
    branches: '*'
    tags: 'v*.*'
  pull_request:

jobs:
  build-posix:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - { name: linux-x64, os: ubuntu-latest }
          - { name: darwin-x64, os: macos-latest }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      - name: Build
        run: |
          cmake -G Ninja -B build
          cmake --build build --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cp2102-${{ matrix.name }}
          path: build/cp2102/cp2102
          if-no-files-found: error

      - name: Pack release assets
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: tar -caf cp2102-${{ matrix.name }}.tar.xz -C build/cp2102 cp2102

      - name: Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          file: cp2102-${{ matrix.name }}.tar.xz
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - { name: linux-arm, arch: armv7, distro: buster }
          - { name: linux-arm64, arch: aarch64, distro: buster }
          - { name: linux-arm-musl, arch: armv7, distro: alpine_latest }
          - { name: linux-arm64-musl, arch: aarch64, distro: alpine_latest }

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Build
        uses: uraimo/run-on-arch-action@v2.2.0
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          install: |
            case "${{ matrix.distro }}" in
              buster)
                apt-get update -q -y
                apt-get install -q -y git build-essential cmake ninja-build
                ;;
              alpine_latest*)
                apk update
                apk add git cmake make ninja g++ libtool musl-dev linux-headers
                ;;
            esac
          run: |
            git config --global --add safe.directory $PWD
            cmake -G Ninja -B build
            cmake --build build --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cp2102-${{ matrix.name }}
          path: build/cp2102/cp2102
          if-no-files-found: error

      - name: Pack release assets
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: tar -caf cp2102-${{ matrix.name }}.tar.xz -C build/cp2102 cp2102

      - name: Release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: svenstaro/upload-release-action@v2
        with:
          file: cp2102-${{ matrix.name }}.tar.xz
          tag: ${{ github.ref }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
